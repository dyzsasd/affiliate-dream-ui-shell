/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainCreateConversationRequest
 */
export interface DomainCreateConversationRequest {
    /**
     * 
     * @type {string}
     * @memberof DomainCreateConversationRequest
     */
    initialMessage: string;
    /**
     * 
     * @type {number}
     * @memberof DomainCreateConversationRequest
     */
    listId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainCreateConversationRequest
     */
    publisherDomain: string;
    /**
     * 
     * @type {string}
     * @memberof DomainCreateConversationRequest
     */
    subject: string;
}

/**
 * Check if a given object implements the DomainCreateConversationRequest interface.
 */
export function instanceOfDomainCreateConversationRequest(value: object): value is DomainCreateConversationRequest {
    if (!('initialMessage' in value) || value['initialMessage'] === undefined) return false;
    if (!('publisherDomain' in value) || value['publisherDomain'] === undefined) return false;
    if (!('subject' in value) || value['subject'] === undefined) return false;
    return true;
}

export function DomainCreateConversationRequestFromJSON(json: any): DomainCreateConversationRequest {
    return DomainCreateConversationRequestFromJSONTyped(json, false);
}

export function DomainCreateConversationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainCreateConversationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'initialMessage': json['initial_message'],
        'listId': json['list_id'] == null ? undefined : json['list_id'],
        'publisherDomain': json['publisher_domain'],
        'subject': json['subject'],
    };
}

export function DomainCreateConversationRequestToJSON(json: any): DomainCreateConversationRequest {
    return DomainCreateConversationRequestToJSONTyped(json, false);
}

export function DomainCreateConversationRequestToJSONTyped(value?: DomainCreateConversationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'initial_message': value['initialMessage'],
        'list_id': value['listId'],
        'publisher_domain': value['publisherDomain'],
        'subject': value['subject'],
    };
}

