/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelsUpdateCampaignRequest
 */
export interface ModelsUpdateCampaignRequest {
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    conversionMethod?: ModelsUpdateCampaignRequestConversionMethodEnum;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    currencyId?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    dailyClickCap?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    dailyConversionCap?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    description?: string;
    /**
     * Core campaign fields
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    destinationUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    endDate?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    fixedClickAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    fixedConversionAmount?: number;
    /**
     * Simplified billing configuration
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    fixedRevenue?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    globalClickCap?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    globalConversionCap?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    internalNotes?: string;
    /**
     * Caps and limits
     * @type {boolean}
     * @memberof ModelsUpdateCampaignRequest
     */
    isCapsEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    monthlyClickCap?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    monthlyConversionCap?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    percentageConversionAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    previewUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    sessionDefinition?: ModelsUpdateCampaignRequestSessionDefinitionEnum;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    sessionDuration?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    startDate?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    status: ModelsUpdateCampaignRequestStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    termsAndConditions?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    thumbnailUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUpdateCampaignRequest
     */
    visibility?: ModelsUpdateCampaignRequestVisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    weeklyClickCap?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsUpdateCampaignRequest
     */
    weeklyConversionCap?: number;
}


/**
 * @export
 */
export const ModelsUpdateCampaignRequestConversionMethodEnum = {
    ServerPostback: 'server_postback',
    Pixel: 'pixel'
} as const;
export type ModelsUpdateCampaignRequestConversionMethodEnum = typeof ModelsUpdateCampaignRequestConversionMethodEnum[keyof typeof ModelsUpdateCampaignRequestConversionMethodEnum];

/**
 * @export
 */
export const ModelsUpdateCampaignRequestSessionDefinitionEnum = {
    Cookie: 'cookie',
    Ip: 'ip',
    Fingerprint: 'fingerprint'
} as const;
export type ModelsUpdateCampaignRequestSessionDefinitionEnum = typeof ModelsUpdateCampaignRequestSessionDefinitionEnum[keyof typeof ModelsUpdateCampaignRequestSessionDefinitionEnum];

/**
 * @export
 */
export const ModelsUpdateCampaignRequestStatusEnum = {
    Draft: 'draft',
    Active: 'active',
    Paused: 'paused',
    Archived: 'archived'
} as const;
export type ModelsUpdateCampaignRequestStatusEnum = typeof ModelsUpdateCampaignRequestStatusEnum[keyof typeof ModelsUpdateCampaignRequestStatusEnum];

/**
 * @export
 */
export const ModelsUpdateCampaignRequestVisibilityEnum = {
    Public: 'public',
    RequireApproval: 'require_approval',
    Private: 'private'
} as const;
export type ModelsUpdateCampaignRequestVisibilityEnum = typeof ModelsUpdateCampaignRequestVisibilityEnum[keyof typeof ModelsUpdateCampaignRequestVisibilityEnum];


/**
 * Check if a given object implements the ModelsUpdateCampaignRequest interface.
 */
export function instanceOfModelsUpdateCampaignRequest(value: object): value is ModelsUpdateCampaignRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ModelsUpdateCampaignRequestFromJSON(json: any): ModelsUpdateCampaignRequest {
    return ModelsUpdateCampaignRequestFromJSONTyped(json, false);
}

export function ModelsUpdateCampaignRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsUpdateCampaignRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'conversionMethod': json['conversion_method'] == null ? undefined : json['conversion_method'],
        'currencyId': json['currency_id'] == null ? undefined : json['currency_id'],
        'dailyClickCap': json['daily_click_cap'] == null ? undefined : json['daily_click_cap'],
        'dailyConversionCap': json['daily_conversion_cap'] == null ? undefined : json['daily_conversion_cap'],
        'description': json['description'] == null ? undefined : json['description'],
        'destinationUrl': json['destination_url'] == null ? undefined : json['destination_url'],
        'endDate': json['end_date'] == null ? undefined : json['end_date'],
        'fixedClickAmount': json['fixed_click_amount'] == null ? undefined : json['fixed_click_amount'],
        'fixedConversionAmount': json['fixed_conversion_amount'] == null ? undefined : json['fixed_conversion_amount'],
        'fixedRevenue': json['fixed_revenue'] == null ? undefined : json['fixed_revenue'],
        'globalClickCap': json['global_click_cap'] == null ? undefined : json['global_click_cap'],
        'globalConversionCap': json['global_conversion_cap'] == null ? undefined : json['global_conversion_cap'],
        'internalNotes': json['internal_notes'] == null ? undefined : json['internal_notes'],
        'isCapsEnabled': json['is_caps_enabled'] == null ? undefined : json['is_caps_enabled'],
        'monthlyClickCap': json['monthly_click_cap'] == null ? undefined : json['monthly_click_cap'],
        'monthlyConversionCap': json['monthly_conversion_cap'] == null ? undefined : json['monthly_conversion_cap'],
        'name': json['name'],
        'percentageConversionAmount': json['percentage_conversion_amount'] == null ? undefined : json['percentage_conversion_amount'],
        'previewUrl': json['preview_url'] == null ? undefined : json['preview_url'],
        'sessionDefinition': json['session_definition'] == null ? undefined : json['session_definition'],
        'sessionDuration': json['session_duration'] == null ? undefined : json['session_duration'],
        'startDate': json['start_date'] == null ? undefined : json['start_date'],
        'status': json['status'],
        'termsAndConditions': json['terms_and_conditions'] == null ? undefined : json['terms_and_conditions'],
        'thumbnailUrl': json['thumbnail_url'] == null ? undefined : json['thumbnail_url'],
        'visibility': json['visibility'] == null ? undefined : json['visibility'],
        'weeklyClickCap': json['weekly_click_cap'] == null ? undefined : json['weekly_click_cap'],
        'weeklyConversionCap': json['weekly_conversion_cap'] == null ? undefined : json['weekly_conversion_cap'],
    };
}

export function ModelsUpdateCampaignRequestToJSON(json: any): ModelsUpdateCampaignRequest {
    return ModelsUpdateCampaignRequestToJSONTyped(json, false);
}

export function ModelsUpdateCampaignRequestToJSONTyped(value?: ModelsUpdateCampaignRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conversion_method': value['conversionMethod'],
        'currency_id': value['currencyId'],
        'daily_click_cap': value['dailyClickCap'],
        'daily_conversion_cap': value['dailyConversionCap'],
        'description': value['description'],
        'destination_url': value['destinationUrl'],
        'end_date': value['endDate'],
        'fixed_click_amount': value['fixedClickAmount'],
        'fixed_conversion_amount': value['fixedConversionAmount'],
        'fixed_revenue': value['fixedRevenue'],
        'global_click_cap': value['globalClickCap'],
        'global_conversion_cap': value['globalConversionCap'],
        'internal_notes': value['internalNotes'],
        'is_caps_enabled': value['isCapsEnabled'],
        'monthly_click_cap': value['monthlyClickCap'],
        'monthly_conversion_cap': value['monthlyConversionCap'],
        'name': value['name'],
        'percentage_conversion_amount': value['percentageConversionAmount'],
        'preview_url': value['previewUrl'],
        'session_definition': value['sessionDefinition'],
        'session_duration': value['sessionDuration'],
        'start_date': value['startDate'],
        'status': value['status'],
        'terms_and_conditions': value['termsAndConditions'],
        'thumbnail_url': value['thumbnailUrl'],
        'visibility': value['visibility'],
        'weekly_click_cap': value['weeklyClickCap'],
        'weekly_conversion_cap': value['weeklyConversionCap'],
    };
}

