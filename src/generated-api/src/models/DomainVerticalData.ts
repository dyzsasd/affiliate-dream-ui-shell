/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainVerticalDataSampleValue } from './DomainVerticalDataSampleValue';
import {
    DomainVerticalDataSampleValueFromJSON,
    DomainVerticalDataSampleValueFromJSONTyped,
    DomainVerticalDataSampleValueToJSON,
    DomainVerticalDataSampleValueToJSONTyped,
} from './DomainVerticalDataSampleValue';

/**
 * 
 * @export
 * @interface DomainVerticalData
 */
export interface DomainVerticalData {
    /**
     * 
     * @type {number}
     * @memberof DomainVerticalData
     */
    count?: number;
    /**
     * 
     * @type {DomainVerticalDataSampleValue}
     * @memberof DomainVerticalData
     */
    sampleValue?: DomainVerticalDataSampleValue;
    /**
     * 
     * @type {Array<DomainVerticalDataSampleValue>}
     * @memberof DomainVerticalData
     */
    value?: Array<DomainVerticalDataSampleValue>;
}

/**
 * Check if a given object implements the DomainVerticalData interface.
 */
export function instanceOfDomainVerticalData(value: object): value is DomainVerticalData {
    return true;
}

export function DomainVerticalDataFromJSON(json: any): DomainVerticalData {
    return DomainVerticalDataFromJSONTyped(json, false);
}

export function DomainVerticalDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainVerticalData {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'sampleValue': json['sampleValue'] == null ? undefined : DomainVerticalDataSampleValueFromJSON(json['sampleValue']),
        'value': json['value'] == null ? undefined : ((json['value'] as Array<any>).map(DomainVerticalDataSampleValueFromJSON)),
    };
}

export function DomainVerticalDataToJSON(json: any): DomainVerticalData {
    return DomainVerticalDataToJSONTyped(json, false);
}

export function DomainVerticalDataToJSONTyped(value?: DomainVerticalData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'sampleValue': DomainVerticalDataSampleValueToJSON(value['sampleValue']),
        'value': value['value'] == null ? undefined : ((value['value'] as Array<any>).map(DomainVerticalDataSampleValueToJSON)),
    };
}

