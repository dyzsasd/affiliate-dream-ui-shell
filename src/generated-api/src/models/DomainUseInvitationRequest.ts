/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainUseInvitationRequest
 */
export interface DomainUseInvitationRequest {
    /**
     * 
     * @type {number}
     * @memberof DomainUseInvitationRequest
     */
    affiliateOrgId: number;
    /**
     * 
     * @type {string}
     * @memberof DomainUseInvitationRequest
     */
    invitationToken: string;
    /**
     * 
     * @type {string}
     * @memberof DomainUseInvitationRequest
     */
    ipAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainUseInvitationRequest
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainUseInvitationRequest
     */
    userAgent?: string;
}

/**
 * Check if a given object implements the DomainUseInvitationRequest interface.
 */
export function instanceOfDomainUseInvitationRequest(value: object): value is DomainUseInvitationRequest {
    if (!('affiliateOrgId' in value) || value['affiliateOrgId'] === undefined) return false;
    if (!('invitationToken' in value) || value['invitationToken'] === undefined) return false;
    return true;
}

export function DomainUseInvitationRequestFromJSON(json: any): DomainUseInvitationRequest {
    return DomainUseInvitationRequestFromJSONTyped(json, false);
}

export function DomainUseInvitationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainUseInvitationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'affiliateOrgId': json['affiliate_org_id'],
        'invitationToken': json['invitation_token'],
        'ipAddress': json['ip_address'] == null ? undefined : json['ip_address'],
        'message': json['message'] == null ? undefined : json['message'],
        'userAgent': json['user_agent'] == null ? undefined : json['user_agent'],
    };
}

export function DomainUseInvitationRequestToJSON(json: any): DomainUseInvitationRequest {
    return DomainUseInvitationRequestToJSONTyped(json, false);
}

export function DomainUseInvitationRequestToJSONTyped(value?: DomainUseInvitationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'affiliate_org_id': value['affiliateOrgId'],
        'invitation_token': value['invitationToken'],
        'ip_address': value['ipAddress'],
        'message': value['message'],
        'user_agent': value['userAgent'],
    };
}

