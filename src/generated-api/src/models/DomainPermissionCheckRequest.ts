/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainDelegationPermission } from './DomainDelegationPermission';
import {
    DomainDelegationPermissionFromJSON,
    DomainDelegationPermissionFromJSONTyped,
    DomainDelegationPermissionToJSON,
    DomainDelegationPermissionToJSONTyped,
} from './DomainDelegationPermission';

/**
 * 
 * @export
 * @interface DomainPermissionCheckRequest
 */
export interface DomainPermissionCheckRequest {
    /**
     * 
     * @type {number}
     * @memberof DomainPermissionCheckRequest
     */
    advertiserOrgId: number;
    /**
     * 
     * @type {number}
     * @memberof DomainPermissionCheckRequest
     */
    agencyOrgId: number;
    /**
     * 
     * @type {Array<DomainDelegationPermission>}
     * @memberof DomainPermissionCheckRequest
     */
    permissions: Array<DomainDelegationPermission>;
}

/**
 * Check if a given object implements the DomainPermissionCheckRequest interface.
 */
export function instanceOfDomainPermissionCheckRequest(value: object): value is DomainPermissionCheckRequest {
    if (!('advertiserOrgId' in value) || value['advertiserOrgId'] === undefined) return false;
    if (!('agencyOrgId' in value) || value['agencyOrgId'] === undefined) return false;
    if (!('permissions' in value) || value['permissions'] === undefined) return false;
    return true;
}

export function DomainPermissionCheckRequestFromJSON(json: any): DomainPermissionCheckRequest {
    return DomainPermissionCheckRequestFromJSONTyped(json, false);
}

export function DomainPermissionCheckRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainPermissionCheckRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'advertiserOrgId': json['advertiser_org_id'],
        'agencyOrgId': json['agency_org_id'],
        'permissions': ((json['permissions'] as Array<any>).map(DomainDelegationPermissionFromJSON)),
    };
}

export function DomainPermissionCheckRequestToJSON(json: any): DomainPermissionCheckRequest {
    return DomainPermissionCheckRequestToJSONTyped(json, false);
}

export function DomainPermissionCheckRequestToJSONTyped(value?: DomainPermissionCheckRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'advertiser_org_id': value['advertiserOrgId'],
        'agency_org_id': value['agencyOrgId'],
        'permissions': ((value['permissions'] as Array<any>).map(DomainDelegationPermissionToJSON)),
    };
}

