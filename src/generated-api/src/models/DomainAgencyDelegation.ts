/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainDelegationStatus } from './DomainDelegationStatus';
import {
    DomainDelegationStatusFromJSON,
    DomainDelegationStatusFromJSONTyped,
    DomainDelegationStatusToJSON,
    DomainDelegationStatusToJSONTyped,
} from './DomainDelegationStatus';

/**
 * 
 * @export
 * @interface DomainAgencyDelegation
 */
export interface DomainAgencyDelegation {
    /**
     * 
     * @type {string}
     * @memberof DomainAgencyDelegation
     */
    acceptedAt?: string;
    /**
     * UUID of agency user who accepted delegation
     * @type {string}
     * @memberof DomainAgencyDelegation
     */
    acceptedByUserId?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainAgencyDelegation
     */
    advertiserOrgId?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainAgencyDelegation
     */
    agencyOrgId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainAgencyDelegation
     */
    createdAt?: string;
    /**
     * Delegation metadata
     * @type {string}
     * @memberof DomainAgencyDelegation
     */
    delegatedByUserId?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainAgencyDelegation
     */
    delegationId?: number;
    /**
     * Expiration settings
     * @type {string}
     * @memberof DomainAgencyDelegation
     */
    expiresAt?: string;
    /**
     * Optional message with delegation
     * @type {string}
     * @memberof DomainAgencyDelegation
     */
    message?: string;
    /**
     * Permissions granted to the agency (JSONB array of permission strings)
     * @type {string}
     * @memberof DomainAgencyDelegation
     */
    permissions?: string;
    /**
     * 
     * @type {DomainDelegationStatus}
     * @memberof DomainAgencyDelegation
     */
    status?: DomainDelegationStatus;
    /**
     * 
     * @type {string}
     * @memberof DomainAgencyDelegation
     */
    updatedAt?: string;
}



/**
 * Check if a given object implements the DomainAgencyDelegation interface.
 */
export function instanceOfDomainAgencyDelegation(value: object): value is DomainAgencyDelegation {
    return true;
}

export function DomainAgencyDelegationFromJSON(json: any): DomainAgencyDelegation {
    return DomainAgencyDelegationFromJSONTyped(json, false);
}

export function DomainAgencyDelegationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainAgencyDelegation {
    if (json == null) {
        return json;
    }
    return {
        
        'acceptedAt': json['accepted_at'] == null ? undefined : json['accepted_at'],
        'acceptedByUserId': json['accepted_by_user_id'] == null ? undefined : json['accepted_by_user_id'],
        'advertiserOrgId': json['advertiser_org_id'] == null ? undefined : json['advertiser_org_id'],
        'agencyOrgId': json['agency_org_id'] == null ? undefined : json['agency_org_id'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'delegatedByUserId': json['delegated_by_user_id'] == null ? undefined : json['delegated_by_user_id'],
        'delegationId': json['delegation_id'] == null ? undefined : json['delegation_id'],
        'expiresAt': json['expires_at'] == null ? undefined : json['expires_at'],
        'message': json['message'] == null ? undefined : json['message'],
        'permissions': json['permissions'] == null ? undefined : json['permissions'],
        'status': json['status'] == null ? undefined : DomainDelegationStatusFromJSON(json['status']),
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function DomainAgencyDelegationToJSON(json: any): DomainAgencyDelegation {
    return DomainAgencyDelegationToJSONTyped(json, false);
}

export function DomainAgencyDelegationToJSONTyped(value?: DomainAgencyDelegation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accepted_at': value['acceptedAt'],
        'accepted_by_user_id': value['acceptedByUserId'],
        'advertiser_org_id': value['advertiserOrgId'],
        'agency_org_id': value['agencyOrgId'],
        'created_at': value['createdAt'],
        'delegated_by_user_id': value['delegatedByUserId'],
        'delegation_id': value['delegationId'],
        'expires_at': value['expiresAt'],
        'message': value['message'],
        'permissions': value['permissions'],
        'status': DomainDelegationStatusToJSON(value['status']),
        'updated_at': value['updatedAt'],
    };
}

