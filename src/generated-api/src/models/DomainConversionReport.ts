/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainConversionReport
 */
export interface DomainConversionReport {
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    affiliateId?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    affiliateName?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    campaignId?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    campaignName?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    clickId?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainConversionReport
     */
    conversionValue?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    offerId?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    offerName?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainConversionReport
     */
    payout?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    sub1?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    sub2?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    sub3?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    timestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainConversionReport
     */
    transactionId?: string;
}

/**
 * Check if a given object implements the DomainConversionReport interface.
 */
export function instanceOfDomainConversionReport(value: object): value is DomainConversionReport {
    return true;
}

export function DomainConversionReportFromJSON(json: any): DomainConversionReport {
    return DomainConversionReportFromJSONTyped(json, false);
}

export function DomainConversionReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainConversionReport {
    if (json == null) {
        return json;
    }
    return {
        
        'affiliateId': json['affiliate_id'] == null ? undefined : json['affiliate_id'],
        'affiliateName': json['affiliate_name'] == null ? undefined : json['affiliate_name'],
        'campaignId': json['campaign_id'] == null ? undefined : json['campaign_id'],
        'campaignName': json['campaign_name'] == null ? undefined : json['campaign_name'],
        'clickId': json['click_id'] == null ? undefined : json['click_id'],
        'conversionValue': json['conversion_value'] == null ? undefined : json['conversion_value'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'id': json['id'] == null ? undefined : json['id'],
        'offerId': json['offer_id'] == null ? undefined : json['offer_id'],
        'offerName': json['offer_name'] == null ? undefined : json['offer_name'],
        'payout': json['payout'] == null ? undefined : json['payout'],
        'status': json['status'] == null ? undefined : json['status'],
        'sub1': json['sub1'] == null ? undefined : json['sub1'],
        'sub2': json['sub2'] == null ? undefined : json['sub2'],
        'sub3': json['sub3'] == null ? undefined : json['sub3'],
        'timestamp': json['timestamp'] == null ? undefined : json['timestamp'],
        'transactionId': json['transaction_id'] == null ? undefined : json['transaction_id'],
    };
}

export function DomainConversionReportToJSON(json: any): DomainConversionReport {
    return DomainConversionReportToJSONTyped(json, false);
}

export function DomainConversionReportToJSONTyped(value?: DomainConversionReport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'affiliate_id': value['affiliateId'],
        'affiliate_name': value['affiliateName'],
        'campaign_id': value['campaignId'],
        'campaign_name': value['campaignName'],
        'click_id': value['clickId'],
        'conversion_value': value['conversionValue'],
        'currency': value['currency'],
        'id': value['id'],
        'offer_id': value['offerId'],
        'offer_name': value['offerName'],
        'payout': value['payout'],
        'status': value['status'],
        'sub1': value['sub1'],
        'sub2': value['sub2'],
        'sub3': value['sub3'],
        'timestamp': value['timestamp'],
        'transaction_id': value['transactionId'],
    };
}

