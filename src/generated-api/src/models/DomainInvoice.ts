/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainInvoiceStatus } from './DomainInvoiceStatus';
import {
    DomainInvoiceStatusFromJSON,
    DomainInvoiceStatusFromJSONTyped,
    DomainInvoiceStatusToJSON,
    DomainInvoiceStatusToJSONTyped,
} from './DomainInvoiceStatus';
import type { DomainInvoiceLineItem } from './DomainInvoiceLineItem';
import {
    DomainInvoiceLineItemFromJSON,
    DomainInvoiceLineItemFromJSONTyped,
    DomainInvoiceLineItemToJSON,
    DomainInvoiceLineItemToJSONTyped,
} from './DomainInvoiceLineItem';

/**
 * 
 * @export
 * @interface DomainInvoice
 */
export interface DomainInvoice {
    /**
     * 
     * @type {number}
     * @memberof DomainInvoice
     */
    amountDue?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainInvoice
     */
    amountPaid?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainInvoice
     */
    billingAccountId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainInvoice
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainInvoice
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainInvoice
     */
    dueDate?: string;
    /**
     * Dates
     * @type {string}
     * @memberof DomainInvoice
     */
    invoiceDate?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainInvoice
     */
    invoiceId?: number;
    /**
     * Invoice Details
     * @type {string}
     * @memberof DomainInvoice
     */
    invoiceNumber?: string;
    /**
     * Invoice Content
     * @type {Array<DomainInvoiceLineItem>}
     * @memberof DomainInvoice
     */
    lineItems?: Array<DomainInvoiceLineItem>;
    /**
     * Metadata
     * @type {{ [key: string]: any | undefined; }}
     * @memberof DomainInvoice
     */
    metadata?: { [key: string]: any | undefined; };
    /**
     * 
     * @type {string}
     * @memberof DomainInvoice
     */
    notes?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainInvoice
     */
    organizationId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainInvoice
     */
    paidAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainInvoice
     */
    periodEnd?: string;
    /**
     * Billing Period
     * @type {string}
     * @memberof DomainInvoice
     */
    periodStart?: string;
    /**
     * Status
     * @type {DomainInvoiceStatus}
     * @memberof DomainInvoice
     */
    status?: DomainInvoiceStatus;
    /**
     * Stripe Integration
     * @type {string}
     * @memberof DomainInvoice
     */
    stripeInvoiceId?: string;
    /**
     * Financial Details
     * @type {number}
     * @memberof DomainInvoice
     */
    subtotal?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainInvoice
     */
    taxAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainInvoice
     */
    totalAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainInvoice
     */
    updatedAt?: string;
}



/**
 * Check if a given object implements the DomainInvoice interface.
 */
export function instanceOfDomainInvoice(value: object): value is DomainInvoice {
    return true;
}

export function DomainInvoiceFromJSON(json: any): DomainInvoice {
    return DomainInvoiceFromJSONTyped(json, false);
}

export function DomainInvoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainInvoice {
    if (json == null) {
        return json;
    }
    return {
        
        'amountDue': json['amount_due'] == null ? undefined : json['amount_due'],
        'amountPaid': json['amount_paid'] == null ? undefined : json['amount_paid'],
        'billingAccountId': json['billing_account_id'] == null ? undefined : json['billing_account_id'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'dueDate': json['due_date'] == null ? undefined : json['due_date'],
        'invoiceDate': json['invoice_date'] == null ? undefined : json['invoice_date'],
        'invoiceId': json['invoice_id'] == null ? undefined : json['invoice_id'],
        'invoiceNumber': json['invoice_number'] == null ? undefined : json['invoice_number'],
        'lineItems': json['line_items'] == null ? undefined : ((json['line_items'] as Array<any>).map(DomainInvoiceLineItemFromJSON)),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'organizationId': json['organization_id'] == null ? undefined : json['organization_id'],
        'paidAt': json['paid_at'] == null ? undefined : json['paid_at'],
        'periodEnd': json['period_end'] == null ? undefined : json['period_end'],
        'periodStart': json['period_start'] == null ? undefined : json['period_start'],
        'status': json['status'] == null ? undefined : DomainInvoiceStatusFromJSON(json['status']),
        'stripeInvoiceId': json['stripe_invoice_id'] == null ? undefined : json['stripe_invoice_id'],
        'subtotal': json['subtotal'] == null ? undefined : json['subtotal'],
        'taxAmount': json['tax_amount'] == null ? undefined : json['tax_amount'],
        'totalAmount': json['total_amount'] == null ? undefined : json['total_amount'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function DomainInvoiceToJSON(json: any): DomainInvoice {
    return DomainInvoiceToJSONTyped(json, false);
}

export function DomainInvoiceToJSONTyped(value?: DomainInvoice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount_due': value['amountDue'],
        'amount_paid': value['amountPaid'],
        'billing_account_id': value['billingAccountId'],
        'created_at': value['createdAt'],
        'currency': value['currency'],
        'due_date': value['dueDate'],
        'invoice_date': value['invoiceDate'],
        'invoice_id': value['invoiceId'],
        'invoice_number': value['invoiceNumber'],
        'line_items': value['lineItems'] == null ? undefined : ((value['lineItems'] as Array<any>).map(DomainInvoiceLineItemToJSON)),
        'metadata': value['metadata'],
        'notes': value['notes'],
        'organization_id': value['organizationId'],
        'paid_at': value['paidAt'],
        'period_end': value['periodEnd'],
        'period_start': value['periodStart'],
        'status': DomainInvoiceStatusToJSON(value['status']),
        'stripe_invoice_id': value['stripeInvoiceId'],
        'subtotal': value['subtotal'],
        'tax_amount': value['taxAmount'],
        'total_amount': value['totalAmount'],
        'updated_at': value['updatedAt'],
    };
}

