/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HandlersUpdateOrganizationRequest
 */
export interface HandlersUpdateOrganizationRequest {
    /**
     * 
     * @type {string}
     * @memberof HandlersUpdateOrganizationRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof HandlersUpdateOrganizationRequest
     */
    type: HandlersUpdateOrganizationRequestTypeEnum;
}


/**
 * @export
 */
export const HandlersUpdateOrganizationRequestTypeEnum = {
    Advertiser: 'advertiser',
    Affiliate: 'affiliate',
    PlatformOwner: 'platform_owner'
} as const;
export type HandlersUpdateOrganizationRequestTypeEnum = typeof HandlersUpdateOrganizationRequestTypeEnum[keyof typeof HandlersUpdateOrganizationRequestTypeEnum];


/**
 * Check if a given object implements the HandlersUpdateOrganizationRequest interface.
 */
export function instanceOfHandlersUpdateOrganizationRequest(value: object): value is HandlersUpdateOrganizationRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function HandlersUpdateOrganizationRequestFromJSON(json: any): HandlersUpdateOrganizationRequest {
    return HandlersUpdateOrganizationRequestFromJSONTyped(json, false);
}

export function HandlersUpdateOrganizationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): HandlersUpdateOrganizationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
    };
}

export function HandlersUpdateOrganizationRequestToJSON(json: any): HandlersUpdateOrganizationRequest {
    return HandlersUpdateOrganizationRequestToJSONTyped(json, false);
}

export function HandlersUpdateOrganizationRequestToJSONTyped(value?: HandlersUpdateOrganizationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
    };
}

