/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainOrganizationAssociation } from './DomainOrganizationAssociation';
import {
    DomainOrganizationAssociationFromJSON,
    DomainOrganizationAssociationFromJSONTyped,
    DomainOrganizationAssociationToJSON,
    DomainOrganizationAssociationToJSONTyped,
} from './DomainOrganizationAssociation';
import type { DomainAdvertiserAssociationInvitation } from './DomainAdvertiserAssociationInvitation';
import {
    DomainAdvertiserAssociationInvitationFromJSON,
    DomainAdvertiserAssociationInvitationFromJSONTyped,
    DomainAdvertiserAssociationInvitationToJSON,
    DomainAdvertiserAssociationInvitationToJSONTyped,
} from './DomainAdvertiserAssociationInvitation';

/**
 * 
 * @export
 * @interface DomainUseInvitationResponse
 */
export interface DomainUseInvitationResponse {
    /**
     * 
     * @type {DomainOrganizationAssociation}
     * @memberof DomainUseInvitationResponse
     */
    association?: DomainOrganizationAssociation;
    /**
     * 
     * @type {string}
     * @memberof DomainUseInvitationResponse
     */
    errorMessage?: string;
    /**
     * 
     * @type {DomainAdvertiserAssociationInvitation}
     * @memberof DomainUseInvitationResponse
     */
    invitation?: DomainAdvertiserAssociationInvitation;
    /**
     * 
     * @type {boolean}
     * @memberof DomainUseInvitationResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the DomainUseInvitationResponse interface.
 */
export function instanceOfDomainUseInvitationResponse(value: object): value is DomainUseInvitationResponse {
    return true;
}

export function DomainUseInvitationResponseFromJSON(json: any): DomainUseInvitationResponse {
    return DomainUseInvitationResponseFromJSONTyped(json, false);
}

export function DomainUseInvitationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainUseInvitationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'association': json['association'] == null ? undefined : DomainOrganizationAssociationFromJSON(json['association']),
        'errorMessage': json['error_message'] == null ? undefined : json['error_message'],
        'invitation': json['invitation'] == null ? undefined : DomainAdvertiserAssociationInvitationFromJSON(json['invitation']),
        'success': json['success'] == null ? undefined : json['success'],
    };
}

export function DomainUseInvitationResponseToJSON(json: any): DomainUseInvitationResponse {
    return DomainUseInvitationResponseToJSONTyped(json, false);
}

export function DomainUseInvitationResponseToJSONTyped(value?: DomainUseInvitationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'association': DomainOrganizationAssociationToJSON(value['association']),
        'error_message': value['errorMessage'],
        'invitation': DomainAdvertiserAssociationInvitationToJSON(value['invitation']),
        'success': value['success'],
    };
}

