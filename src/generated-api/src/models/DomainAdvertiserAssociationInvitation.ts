/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainInvitationStatus } from './DomainInvitationStatus';
import {
    DomainInvitationStatusFromJSON,
    DomainInvitationStatusFromJSONTyped,
    DomainInvitationStatusToJSON,
    DomainInvitationStatusToJSONTyped,
} from './DomainInvitationStatus';

/**
 * 
 * @export
 * @interface DomainAdvertiserAssociationInvitation
 */
export interface DomainAdvertiserAssociationInvitation {
    /**
     * 
     * @type {number}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    advertiserOrgId?: number;
    /**
     * Access control
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    allowedAffiliateOrgIds?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    createdByUserId?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    currentUses?: number;
    /**
     * Default visibility settings for associations created through this invitation
     * @type {boolean}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    defaultAllAffiliatesVisible?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    defaultAllCampaignsVisible?: boolean;
    /**
     * JSONB array
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    defaultVisibleAffiliateIds?: string;
    /**
     * JSONB array
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    defaultVisibleCampaignIds?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    description?: string;
    /**
     * Expiration
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    expiresAt?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    invitationId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    invitationToken?: string;
    /**
     * Usage limits
     * @type {number}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    maxUses?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    name?: string;
    /**
     * Status and metadata
     * @type {DomainInvitationStatus}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    status?: DomainInvitationStatus;
    /**
     * 
     * @type {string}
     * @memberof DomainAdvertiserAssociationInvitation
     */
    updatedAt?: string;
}



/**
 * Check if a given object implements the DomainAdvertiserAssociationInvitation interface.
 */
export function instanceOfDomainAdvertiserAssociationInvitation(value: object): value is DomainAdvertiserAssociationInvitation {
    return true;
}

export function DomainAdvertiserAssociationInvitationFromJSON(json: any): DomainAdvertiserAssociationInvitation {
    return DomainAdvertiserAssociationInvitationFromJSONTyped(json, false);
}

export function DomainAdvertiserAssociationInvitationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainAdvertiserAssociationInvitation {
    if (json == null) {
        return json;
    }
    return {
        
        'advertiserOrgId': json['advertiser_org_id'] == null ? undefined : json['advertiser_org_id'],
        'allowedAffiliateOrgIds': json['allowed_affiliate_org_ids'] == null ? undefined : json['allowed_affiliate_org_ids'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'createdByUserId': json['created_by_user_id'] == null ? undefined : json['created_by_user_id'],
        'currentUses': json['current_uses'] == null ? undefined : json['current_uses'],
        'defaultAllAffiliatesVisible': json['default_all_affiliates_visible'] == null ? undefined : json['default_all_affiliates_visible'],
        'defaultAllCampaignsVisible': json['default_all_campaigns_visible'] == null ? undefined : json['default_all_campaigns_visible'],
        'defaultVisibleAffiliateIds': json['default_visible_affiliate_ids'] == null ? undefined : json['default_visible_affiliate_ids'],
        'defaultVisibleCampaignIds': json['default_visible_campaign_ids'] == null ? undefined : json['default_visible_campaign_ids'],
        'description': json['description'] == null ? undefined : json['description'],
        'expiresAt': json['expires_at'] == null ? undefined : json['expires_at'],
        'invitationId': json['invitation_id'] == null ? undefined : json['invitation_id'],
        'invitationToken': json['invitation_token'] == null ? undefined : json['invitation_token'],
        'maxUses': json['max_uses'] == null ? undefined : json['max_uses'],
        'message': json['message'] == null ? undefined : json['message'],
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : DomainInvitationStatusFromJSON(json['status']),
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function DomainAdvertiserAssociationInvitationToJSON(json: any): DomainAdvertiserAssociationInvitation {
    return DomainAdvertiserAssociationInvitationToJSONTyped(json, false);
}

export function DomainAdvertiserAssociationInvitationToJSONTyped(value?: DomainAdvertiserAssociationInvitation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'advertiser_org_id': value['advertiserOrgId'],
        'allowed_affiliate_org_ids': value['allowedAffiliateOrgIds'],
        'created_at': value['createdAt'],
        'created_by_user_id': value['createdByUserId'],
        'current_uses': value['currentUses'],
        'default_all_affiliates_visible': value['defaultAllAffiliatesVisible'],
        'default_all_campaigns_visible': value['defaultAllCampaignsVisible'],
        'default_visible_affiliate_ids': value['defaultVisibleAffiliateIds'],
        'default_visible_campaign_ids': value['defaultVisibleCampaignIds'],
        'description': value['description'],
        'expires_at': value['expiresAt'],
        'invitation_id': value['invitationId'],
        'invitation_token': value['invitationToken'],
        'max_uses': value['maxUses'],
        'message': value['message'],
        'name': value['name'],
        'status': DomainInvitationStatusToJSON(value['status']),
        'updated_at': value['updatedAt'],
    };
}

