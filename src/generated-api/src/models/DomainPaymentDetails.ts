/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainBillingAddress } from './DomainBillingAddress';
import {
    DomainBillingAddressFromJSON,
    DomainBillingAddressFromJSONTyped,
    DomainBillingAddressToJSON,
    DomainBillingAddressToJSONTyped,
} from './DomainBillingAddress';
import type { DomainPaymentDetailsType } from './DomainPaymentDetailsType';
import {
    DomainPaymentDetailsTypeFromJSON,
    DomainPaymentDetailsTypeFromJSONTyped,
    DomainPaymentDetailsTypeToJSON,
    DomainPaymentDetailsTypeToJSONTyped,
} from './DomainPaymentDetailsType';

/**
 * 
 * @export
 * @interface DomainPaymentDetails
 */
export interface DomainPaymentDetails {
    /**
     * 
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    accountNumber?: string;
    /**
     * ACH details
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    achAccountType?: string;
    /**
     * Additional details for other payment types
     * @type {{ [key: string]: any | undefined; }}
     * @memberof DomainPaymentDetails
     */
    additionalDetails?: { [key: string]: any | undefined; };
    /**
     * 
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    bankAddress?: string;
    /**
     * Wire transfer details
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    bankName?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    cryptoAddress?: string;
    /**
     * Crypto details
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    cryptoWalletType?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    iban?: string;
    /**
     * Check details
     * @type {DomainBillingAddress}
     * @memberof DomainPaymentDetails
     */
    mailingAddress?: DomainBillingAddress;
    /**
     * PayPal details
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    paypalEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    routingNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainPaymentDetails
     */
    swiftCode?: string;
    /**
     * Payment type for validation and processing
     * @type {DomainPaymentDetailsType}
     * @memberof DomainPaymentDetails
     */
    type?: DomainPaymentDetailsType;
}



/**
 * Check if a given object implements the DomainPaymentDetails interface.
 */
export function instanceOfDomainPaymentDetails(value: object): value is DomainPaymentDetails {
    return true;
}

export function DomainPaymentDetailsFromJSON(json: any): DomainPaymentDetails {
    return DomainPaymentDetailsFromJSONTyped(json, false);
}

export function DomainPaymentDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainPaymentDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'accountNumber': json['account_number'] == null ? undefined : json['account_number'],
        'achAccountType': json['ach_account_type'] == null ? undefined : json['ach_account_type'],
        'additionalDetails': json['additional_details'] == null ? undefined : json['additional_details'],
        'bankAddress': json['bank_address'] == null ? undefined : json['bank_address'],
        'bankName': json['bank_name'] == null ? undefined : json['bank_name'],
        'cryptoAddress': json['crypto_address'] == null ? undefined : json['crypto_address'],
        'cryptoWalletType': json['crypto_wallet_type'] == null ? undefined : json['crypto_wallet_type'],
        'iban': json['iban'] == null ? undefined : json['iban'],
        'mailingAddress': json['mailing_address'] == null ? undefined : DomainBillingAddressFromJSON(json['mailing_address']),
        'paypalEmail': json['paypal_email'] == null ? undefined : json['paypal_email'],
        'routingNumber': json['routing_number'] == null ? undefined : json['routing_number'],
        'swiftCode': json['swift_code'] == null ? undefined : json['swift_code'],
        'type': json['type'] == null ? undefined : DomainPaymentDetailsTypeFromJSON(json['type']),
    };
}

export function DomainPaymentDetailsToJSON(json: any): DomainPaymentDetails {
    return DomainPaymentDetailsToJSONTyped(json, false);
}

export function DomainPaymentDetailsToJSONTyped(value?: DomainPaymentDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'account_number': value['accountNumber'],
        'ach_account_type': value['achAccountType'],
        'additional_details': value['additionalDetails'],
        'bank_address': value['bankAddress'],
        'bank_name': value['bankName'],
        'crypto_address': value['cryptoAddress'],
        'crypto_wallet_type': value['cryptoWalletType'],
        'iban': value['iban'],
        'mailing_address': DomainBillingAddressToJSON(value['mailingAddress']),
        'paypal_email': value['paypalEmail'],
        'routing_number': value['routingNumber'],
        'swift_code': value['swiftCode'],
        'type': DomainPaymentDetailsTypeToJSON(value['type']),
    };
}

