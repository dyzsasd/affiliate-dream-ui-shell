/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainAssociationStatus } from './DomainAssociationStatus';
import {
    DomainAssociationStatusFromJSON,
    DomainAssociationStatusFromJSONTyped,
    DomainAssociationStatusToJSON,
    DomainAssociationStatusToJSONTyped,
} from './DomainAssociationStatus';
import type { DomainProfile } from './DomainProfile';
import {
    DomainProfileFromJSON,
    DomainProfileFromJSONTyped,
    DomainProfileToJSON,
    DomainProfileToJSONTyped,
} from './DomainProfile';
import type { DomainOrganization } from './DomainOrganization';
import {
    DomainOrganizationFromJSON,
    DomainOrganizationFromJSONTyped,
    DomainOrganizationToJSON,
    DomainOrganizationToJSONTyped,
} from './DomainOrganization';
import type { DomainAssociationType } from './DomainAssociationType';
import {
    DomainAssociationTypeFromJSON,
    DomainAssociationTypeFromJSONTyped,
    DomainAssociationTypeToJSON,
    DomainAssociationTypeToJSONTyped,
} from './DomainAssociationType';

/**
 * 
 * @export
 * @interface DomainOrganizationAssociationWithDetails
 */
export interface DomainOrganizationAssociationWithDetails {
    /**
     * 
     * @type {number}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    advertiserOrgId?: number;
    /**
     * 
     * @type {DomainOrganization}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    advertiserOrganization?: DomainOrganization;
    /**
     * 
     * @type {number}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    affiliateOrgId?: number;
    /**
     * 
     * @type {DomainOrganization}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    affiliateOrganization?: DomainOrganization;
    /**
     * Default visibility flags (when true, all affiliates/campaigns are visible)
     * @type {boolean}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    allAffiliatesVisible?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    allCampaignsVisible?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    approvedAt?: string;
    /**
     * 
     * @type {DomainProfile}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    approvedByUser?: DomainProfile;
    /**
     * UUID of user who approved
     * @type {string}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    approvedByUserId?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    associationId?: number;
    /**
     * 
     * @type {DomainAssociationType}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    associationType?: DomainAssociationType;
    /**
     * 
     * @type {string}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    createdAt?: string;
    /**
     * Optional message with request/invitation
     * @type {string}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    message?: string;
    /**
     * 
     * @type {DomainProfile}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    requestedByUser?: DomainProfile;
    /**
     * Request/invitation metadata
     * @type {string}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    requestedByUserId?: string;
    /**
     * 
     * @type {DomainAssociationStatus}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    status?: DomainAssociationStatus;
    /**
     * 
     * @type {string}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    updatedAt?: string;
    /**
     * Visibility settings - JSON arrays of IDs
     * @type {string}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    visibleAffiliateIds?: string;
    /**
     * JSONB array of campaign IDs visible to affiliate
     * @type {string}
     * @memberof DomainOrganizationAssociationWithDetails
     */
    visibleCampaignIds?: string;
}



/**
 * Check if a given object implements the DomainOrganizationAssociationWithDetails interface.
 */
export function instanceOfDomainOrganizationAssociationWithDetails(value: object): value is DomainOrganizationAssociationWithDetails {
    return true;
}

export function DomainOrganizationAssociationWithDetailsFromJSON(json: any): DomainOrganizationAssociationWithDetails {
    return DomainOrganizationAssociationWithDetailsFromJSONTyped(json, false);
}

export function DomainOrganizationAssociationWithDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainOrganizationAssociationWithDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'advertiserOrgId': json['advertiser_org_id'] == null ? undefined : json['advertiser_org_id'],
        'advertiserOrganization': json['advertiser_organization'] == null ? undefined : DomainOrganizationFromJSON(json['advertiser_organization']),
        'affiliateOrgId': json['affiliate_org_id'] == null ? undefined : json['affiliate_org_id'],
        'affiliateOrganization': json['affiliate_organization'] == null ? undefined : DomainOrganizationFromJSON(json['affiliate_organization']),
        'allAffiliatesVisible': json['all_affiliates_visible'] == null ? undefined : json['all_affiliates_visible'],
        'allCampaignsVisible': json['all_campaigns_visible'] == null ? undefined : json['all_campaigns_visible'],
        'approvedAt': json['approved_at'] == null ? undefined : json['approved_at'],
        'approvedByUser': json['approved_by_user'] == null ? undefined : DomainProfileFromJSON(json['approved_by_user']),
        'approvedByUserId': json['approved_by_user_id'] == null ? undefined : json['approved_by_user_id'],
        'associationId': json['association_id'] == null ? undefined : json['association_id'],
        'associationType': json['association_type'] == null ? undefined : DomainAssociationTypeFromJSON(json['association_type']),
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'message': json['message'] == null ? undefined : json['message'],
        'requestedByUser': json['requested_by_user'] == null ? undefined : DomainProfileFromJSON(json['requested_by_user']),
        'requestedByUserId': json['requested_by_user_id'] == null ? undefined : json['requested_by_user_id'],
        'status': json['status'] == null ? undefined : DomainAssociationStatusFromJSON(json['status']),
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
        'visibleAffiliateIds': json['visible_affiliate_ids'] == null ? undefined : json['visible_affiliate_ids'],
        'visibleCampaignIds': json['visible_campaign_ids'] == null ? undefined : json['visible_campaign_ids'],
    };
}

export function DomainOrganizationAssociationWithDetailsToJSON(json: any): DomainOrganizationAssociationWithDetails {
    return DomainOrganizationAssociationWithDetailsToJSONTyped(json, false);
}

export function DomainOrganizationAssociationWithDetailsToJSONTyped(value?: DomainOrganizationAssociationWithDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'advertiser_org_id': value['advertiserOrgId'],
        'advertiser_organization': DomainOrganizationToJSON(value['advertiserOrganization']),
        'affiliate_org_id': value['affiliateOrgId'],
        'affiliate_organization': DomainOrganizationToJSON(value['affiliateOrganization']),
        'all_affiliates_visible': value['allAffiliatesVisible'],
        'all_campaigns_visible': value['allCampaignsVisible'],
        'approved_at': value['approvedAt'],
        'approved_by_user': DomainProfileToJSON(value['approvedByUser']),
        'approved_by_user_id': value['approvedByUserId'],
        'association_id': value['associationId'],
        'association_type': DomainAssociationTypeToJSON(value['associationType']),
        'created_at': value['createdAt'],
        'message': value['message'],
        'requested_by_user': DomainProfileToJSON(value['requestedByUser']),
        'requested_by_user_id': value['requestedByUserId'],
        'status': DomainAssociationStatusToJSON(value['status']),
        'updated_at': value['updatedAt'],
        'visible_affiliate_ids': value['visibleAffiliateIds'],
        'visible_campaign_ids': value['visibleCampaignIds'],
    };
}

