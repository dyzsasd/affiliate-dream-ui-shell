/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainCountryRankingDataHighestValue } from './DomainCountryRankingDataHighestValue';
import {
    DomainCountryRankingDataHighestValueFromJSON,
    DomainCountryRankingDataHighestValueFromJSONTyped,
    DomainCountryRankingDataHighestValueToJSON,
    DomainCountryRankingDataHighestValueToJSONTyped,
} from './DomainCountryRankingDataHighestValue';

/**
 * 
 * @export
 * @interface DomainCountryRankingData
 */
export interface DomainCountryRankingData {
    /**
     * 
     * @type {number}
     * @memberof DomainCountryRankingData
     */
    count?: number;
    /**
     * 
     * @type {DomainCountryRankingDataHighestValue}
     * @memberof DomainCountryRankingData
     */
    highestValue?: DomainCountryRankingDataHighestValue;
    /**
     * 
     * @type {Array<DomainCountryRankingDataHighestValue>}
     * @memberof DomainCountryRankingData
     */
    sampleValue?: Array<DomainCountryRankingDataHighestValue>;
    /**
     * 
     * @type {Array<DomainCountryRankingDataHighestValue>}
     * @memberof DomainCountryRankingData
     */
    value?: Array<DomainCountryRankingDataHighestValue>;
}

/**
 * Check if a given object implements the DomainCountryRankingData interface.
 */
export function instanceOfDomainCountryRankingData(value: object): value is DomainCountryRankingData {
    return true;
}

export function DomainCountryRankingDataFromJSON(json: any): DomainCountryRankingData {
    return DomainCountryRankingDataFromJSONTyped(json, false);
}

export function DomainCountryRankingDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainCountryRankingData {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'highestValue': json['highestValue'] == null ? undefined : DomainCountryRankingDataHighestValueFromJSON(json['highestValue']),
        'sampleValue': json['sampleValue'] == null ? undefined : ((json['sampleValue'] as Array<any>).map(DomainCountryRankingDataHighestValueFromJSON)),
        'value': json['value'] == null ? undefined : ((json['value'] as Array<any>).map(DomainCountryRankingDataHighestValueFromJSON)),
    };
}

export function DomainCountryRankingDataToJSON(json: any): DomainCountryRankingData {
    return DomainCountryRankingDataToJSONTyped(json, false);
}

export function DomainCountryRankingDataToJSONTyped(value?: DomainCountryRankingData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'highestValue': DomainCountryRankingDataHighestValueToJSON(value['highestValue']),
        'sampleValue': value['sampleValue'] == null ? undefined : ((value['sampleValue'] as Array<any>).map(DomainCountryRankingDataHighestValueToJSON)),
        'value': value['value'] == null ? undefined : ((value['value'] as Array<any>).map(DomainCountryRankingDataHighestValueToJSON)),
    };
}

