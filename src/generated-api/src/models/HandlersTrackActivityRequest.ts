/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HandlersTrackActivityRequest
 */
export interface HandlersTrackActivityRequest {
    /**
     * 
     * @type {string}
     * @memberof HandlersTrackActivityRequest
     */
    description: string;
    /**
     * 
     * @type {{ [key: string]: any | undefined; }}
     * @memberof HandlersTrackActivityRequest
     */
    metadata?: { [key: string]: any | undefined; };
    /**
     * 
     * @type {string}
     * @memberof HandlersTrackActivityRequest
     */
    type: string;
}

/**
 * Check if a given object implements the HandlersTrackActivityRequest interface.
 */
export function instanceOfHandlersTrackActivityRequest(value: object): value is HandlersTrackActivityRequest {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function HandlersTrackActivityRequestFromJSON(json: any): HandlersTrackActivityRequest {
    return HandlersTrackActivityRequestFromJSONTyped(json, false);
}

export function HandlersTrackActivityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): HandlersTrackActivityRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'type': json['type'],
    };
}

export function HandlersTrackActivityRequestToJSON(json: any): HandlersTrackActivityRequest {
    return HandlersTrackActivityRequestToJSONTyped(json, false);
}

export function HandlersTrackActivityRequestToJSONTyped(value?: HandlersTrackActivityRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'metadata': value['metadata'],
        'type': value['type'],
    };
}

