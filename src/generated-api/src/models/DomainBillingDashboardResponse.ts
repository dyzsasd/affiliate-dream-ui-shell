/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainInvoice } from './DomainInvoice';
import {
    DomainInvoiceFromJSON,
    DomainInvoiceFromJSONTyped,
    DomainInvoiceToJSON,
    DomainInvoiceToJSONTyped,
} from './DomainInvoice';
import type { DomainStripePaymentMethod } from './DomainStripePaymentMethod';
import {
    DomainStripePaymentMethodFromJSON,
    DomainStripePaymentMethodFromJSONTyped,
    DomainStripePaymentMethodToJSON,
    DomainStripePaymentMethodToJSONTyped,
} from './DomainStripePaymentMethod';
import type { DomainTransaction } from './DomainTransaction';
import {
    DomainTransactionFromJSON,
    DomainTransactionFromJSONTyped,
    DomainTransactionToJSON,
    DomainTransactionToJSONTyped,
} from './DomainTransaction';
import type { DomainBillingAccount } from './DomainBillingAccount';
import {
    DomainBillingAccountFromJSON,
    DomainBillingAccountFromJSONTyped,
    DomainBillingAccountToJSON,
    DomainBillingAccountToJSONTyped,
} from './DomainBillingAccount';

/**
 * 
 * @export
 * @interface DomainBillingDashboardResponse
 */
export interface DomainBillingDashboardResponse {
    /**
     * 
     * @type {DomainBillingAccount}
     * @memberof DomainBillingDashboardResponse
     */
    billingAccount?: DomainBillingAccount;
    /**
     * 
     * @type {number}
     * @memberof DomainBillingDashboardResponse
     */
    currentBalance?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainBillingDashboardResponse
     */
    monthlySpend?: number;
    /**
     * 
     * @type {Array<DomainStripePaymentMethod>}
     * @memberof DomainBillingDashboardResponse
     */
    paymentMethods?: Array<DomainStripePaymentMethod>;
    /**
     * 
     * @type {Array<DomainInvoice>}
     * @memberof DomainBillingDashboardResponse
     */
    pendingInvoices?: Array<DomainInvoice>;
    /**
     * 
     * @type {Array<DomainTransaction>}
     * @memberof DomainBillingDashboardResponse
     */
    recentTransactions?: Array<DomainTransaction>;
}

/**
 * Check if a given object implements the DomainBillingDashboardResponse interface.
 */
export function instanceOfDomainBillingDashboardResponse(value: object): value is DomainBillingDashboardResponse {
    return true;
}

export function DomainBillingDashboardResponseFromJSON(json: any): DomainBillingDashboardResponse {
    return DomainBillingDashboardResponseFromJSONTyped(json, false);
}

export function DomainBillingDashboardResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainBillingDashboardResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'billingAccount': json['billing_account'] == null ? undefined : DomainBillingAccountFromJSON(json['billing_account']),
        'currentBalance': json['current_balance'] == null ? undefined : json['current_balance'],
        'monthlySpend': json['monthly_spend'] == null ? undefined : json['monthly_spend'],
        'paymentMethods': json['payment_methods'] == null ? undefined : ((json['payment_methods'] as Array<any>).map(DomainStripePaymentMethodFromJSON)),
        'pendingInvoices': json['pending_invoices'] == null ? undefined : ((json['pending_invoices'] as Array<any>).map(DomainInvoiceFromJSON)),
        'recentTransactions': json['recent_transactions'] == null ? undefined : ((json['recent_transactions'] as Array<any>).map(DomainTransactionFromJSON)),
    };
}

export function DomainBillingDashboardResponseToJSON(json: any): DomainBillingDashboardResponse {
    return DomainBillingDashboardResponseToJSONTyped(json, false);
}

export function DomainBillingDashboardResponseToJSONTyped(value?: DomainBillingDashboardResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'billing_account': DomainBillingAccountToJSON(value['billingAccount']),
        'current_balance': value['currentBalance'],
        'monthly_spend': value['monthlySpend'],
        'payment_methods': value['paymentMethods'] == null ? undefined : ((value['paymentMethods'] as Array<any>).map(DomainStripePaymentMethodToJSON)),
        'pending_invoices': value['pendingInvoices'] == null ? undefined : ((value['pendingInvoices'] as Array<any>).map(DomainInvoiceToJSON)),
        'recent_transactions': value['recentTransactions'] == null ? undefined : ((value['recentTransactions'] as Array<any>).map(DomainTransactionToJSON)),
    };
}

