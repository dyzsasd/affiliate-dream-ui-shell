
/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainOrganizationType } from './DomainOrganizationType';
import {
    DomainOrganizationTypeFromJSON,
    DomainOrganizationTypeFromJSONTyped,
    DomainOrganizationTypeToJSON,
    DomainOrganizationTypeToJSONTyped,
} from './DomainOrganizationType';

/**
 * 
 * @export
 * @interface DomainOrganization
 */
export interface DomainOrganization {
    /**
     * 
     * @type {string}
     * @memberof DomainOrganization
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainOrganization
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainOrganization
     */
    organizationId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainOrganization
     */
    status?: string;
    /**
     * 
     * @type {DomainOrganizationType}
     * @memberof DomainOrganization
     */
    type?: DomainOrganizationType;
    /**
     * 
     * @type {string}
     * @memberof DomainOrganization
     */
    updatedAt?: string;
}



/**
 * Check if a given object implements the DomainOrganization interface.
 */
export function instanceOfDomainOrganization(value: object): value is DomainOrganization {
    return true;
}

export function DomainOrganizationFromJSON(json: any): DomainOrganization {
    return DomainOrganizationFromJSONTyped(json, false);
}

export function DomainOrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainOrganization {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'name': json['name'] == null ? undefined : json['name'],
        'organizationId': json['organization_id'] == null ? undefined : json['organization_id'],
        'status': json['status'] == null ? undefined : json['status'],
        'type': json['type'] == null ? undefined : DomainOrganizationTypeFromJSON(json['type']),
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function DomainOrganizationToJSON(json: any): DomainOrganization {
    return DomainOrganizationToJSONTyped(json, false);
}

export function DomainOrganizationToJSONTyped(value?: DomainOrganization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': value['createdAt'],
        'name': value['name'],
        'organization_id': value['organizationId'],
        'status': value['status'],
        'type': DomainOrganizationTypeToJSON(value['type']),
        'updated_at': value['updatedAt'],
    };
}
