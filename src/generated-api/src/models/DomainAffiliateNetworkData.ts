/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainAffiliateNetworkData
 */
export interface DomainAffiliateNetworkData {
    /**
     * 
     * @type {number}
     * @memberof DomainAffiliateNetworkData
     */
    count?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof DomainAffiliateNetworkData
     */
    sampleValue?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DomainAffiliateNetworkData
     */
    value?: Array<string>;
}

/**
 * Check if a given object implements the DomainAffiliateNetworkData interface.
 */
export function instanceOfDomainAffiliateNetworkData(value: object): value is DomainAffiliateNetworkData {
    return true;
}

export function DomainAffiliateNetworkDataFromJSON(json: any): DomainAffiliateNetworkData {
    return DomainAffiliateNetworkDataFromJSONTyped(json, false);
}

export function DomainAffiliateNetworkDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainAffiliateNetworkData {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'sampleValue': json['sampleValue'] == null ? undefined : json['sampleValue'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function DomainAffiliateNetworkDataToJSON(json: any): DomainAffiliateNetworkData {
    return DomainAffiliateNetworkDataToJSONTyped(json, false);
}

export function DomainAffiliateNetworkDataToJSONTyped(value?: DomainAffiliateNetworkData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'sampleValue': value['sampleValue'],
        'value': value['value'],
    };
}

