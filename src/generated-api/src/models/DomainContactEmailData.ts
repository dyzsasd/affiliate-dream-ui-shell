/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainContactEmailDataValueInner } from './DomainContactEmailDataValueInner';
import {
    DomainContactEmailDataValueInnerFromJSON,
    DomainContactEmailDataValueInnerFromJSONTyped,
    DomainContactEmailDataValueInnerToJSON,
    DomainContactEmailDataValueInnerToJSONTyped,
} from './DomainContactEmailDataValueInner';

/**
 * 
 * @export
 * @interface DomainContactEmailData
 */
export interface DomainContactEmailData {
    /**
     * 
     * @type {number}
     * @memberof DomainContactEmailData
     */
    count?: number;
    /**
     * 
     * @type {boolean}
     * @memberof DomainContactEmailData
     */
    error?: boolean;
    /**
     * 
     * @type {Array<DomainContactEmailDataValueInner>}
     * @memberof DomainContactEmailData
     */
    value?: Array<DomainContactEmailDataValueInner>;
}

/**
 * Check if a given object implements the DomainContactEmailData interface.
 */
export function instanceOfDomainContactEmailData(value: object): value is DomainContactEmailData {
    return true;
}

export function DomainContactEmailDataFromJSON(json: any): DomainContactEmailData {
    return DomainContactEmailDataFromJSONTyped(json, false);
}

export function DomainContactEmailDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainContactEmailData {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'error': json['error'] == null ? undefined : json['error'],
        'value': json['value'] == null ? undefined : ((json['value'] as Array<any>).map(DomainContactEmailDataValueInnerFromJSON)),
    };
}

export function DomainContactEmailDataToJSON(json: any): DomainContactEmailData {
    return DomainContactEmailDataToJSONTyped(json, false);
}

export function DomainContactEmailDataToJSONTyped(value?: DomainContactEmailData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'error': value['error'],
        'value': value['value'] == null ? undefined : ((value['value'] as Array<any>).map(DomainContactEmailDataValueInnerToJSON)),
    };
}

