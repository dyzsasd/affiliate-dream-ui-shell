/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainAssociationType } from './DomainAssociationType';
import {
    DomainAssociationTypeFromJSON,
    DomainAssociationTypeFromJSONTyped,
    DomainAssociationTypeToJSON,
    DomainAssociationTypeToJSONTyped,
} from './DomainAssociationType';

/**
 * 
 * @export
 * @interface DomainCreateAssociationRequest
 */
export interface DomainCreateAssociationRequest {
    /**
     * 
     * @type {number}
     * @memberof DomainCreateAssociationRequest
     */
    advertiserOrgId: number;
    /**
     * 
     * @type {number}
     * @memberof DomainCreateAssociationRequest
     */
    affiliateOrgId: number;
    /**
     * 
     * @type {boolean}
     * @memberof DomainCreateAssociationRequest
     */
    allAffiliatesVisible?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DomainCreateAssociationRequest
     */
    allCampaignsVisible?: boolean;
    /**
     * 
     * @type {DomainAssociationType}
     * @memberof DomainCreateAssociationRequest
     */
    associationType: DomainAssociationType;
    /**
     * 
     * @type {string}
     * @memberof DomainCreateAssociationRequest
     */
    message?: string;
    /**
     * For invitations from advertiser
     * @type {Array<number>}
     * @memberof DomainCreateAssociationRequest
     */
    visibleAffiliateIds?: Array<number>;
    /**
     * For requests from affiliate
     * @type {Array<number>}
     * @memberof DomainCreateAssociationRequest
     */
    visibleCampaignIds?: Array<number>;
}



/**
 * Check if a given object implements the DomainCreateAssociationRequest interface.
 */
export function instanceOfDomainCreateAssociationRequest(value: object): value is DomainCreateAssociationRequest {
    if (!('advertiserOrgId' in value) || value['advertiserOrgId'] === undefined) return false;
    if (!('affiliateOrgId' in value) || value['affiliateOrgId'] === undefined) return false;
    if (!('associationType' in value) || value['associationType'] === undefined) return false;
    return true;
}

export function DomainCreateAssociationRequestFromJSON(json: any): DomainCreateAssociationRequest {
    return DomainCreateAssociationRequestFromJSONTyped(json, false);
}

export function DomainCreateAssociationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainCreateAssociationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'advertiserOrgId': json['advertiser_org_id'],
        'affiliateOrgId': json['affiliate_org_id'],
        'allAffiliatesVisible': json['all_affiliates_visible'] == null ? undefined : json['all_affiliates_visible'],
        'allCampaignsVisible': json['all_campaigns_visible'] == null ? undefined : json['all_campaigns_visible'],
        'associationType': DomainAssociationTypeFromJSON(json['association_type']),
        'message': json['message'] == null ? undefined : json['message'],
        'visibleAffiliateIds': json['visible_affiliate_ids'] == null ? undefined : json['visible_affiliate_ids'],
        'visibleCampaignIds': json['visible_campaign_ids'] == null ? undefined : json['visible_campaign_ids'],
    };
}

export function DomainCreateAssociationRequestToJSON(json: any): DomainCreateAssociationRequest {
    return DomainCreateAssociationRequestToJSONTyped(json, false);
}

export function DomainCreateAssociationRequestToJSONTyped(value?: DomainCreateAssociationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'advertiser_org_id': value['advertiserOrgId'],
        'affiliate_org_id': value['affiliateOrgId'],
        'all_affiliates_visible': value['allAffiliatesVisible'],
        'all_campaigns_visible': value['allCampaignsVisible'],
        'association_type': DomainAssociationTypeToJSON(value['associationType']),
        'message': value['message'],
        'visible_affiliate_ids': value['visibleAffiliateIds'],
        'visible_campaign_ids': value['visibleCampaignIds'],
    };
}

