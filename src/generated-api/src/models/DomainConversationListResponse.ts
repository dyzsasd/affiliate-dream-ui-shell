/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainPublisherConversation } from './DomainPublisherConversation';
import {
    DomainPublisherConversationFromJSON,
    DomainPublisherConversationFromJSONTyped,
    DomainPublisherConversationToJSON,
    DomainPublisherConversationToJSONTyped,
} from './DomainPublisherConversation';

/**
 * 
 * @export
 * @interface DomainConversationListResponse
 */
export interface DomainConversationListResponse {
    /**
     * 
     * @type {Array<DomainPublisherConversation>}
     * @memberof DomainConversationListResponse
     */
    conversations?: Array<DomainPublisherConversation>;
    /**
     * 
     * @type {number}
     * @memberof DomainConversationListResponse
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainConversationListResponse
     */
    pageSize?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainConversationListResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the DomainConversationListResponse interface.
 */
export function instanceOfDomainConversationListResponse(value: object): value is DomainConversationListResponse {
    return true;
}

export function DomainConversationListResponseFromJSON(json: any): DomainConversationListResponse {
    return DomainConversationListResponseFromJSONTyped(json, false);
}

export function DomainConversationListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainConversationListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'conversations': json['conversations'] == null ? undefined : ((json['conversations'] as Array<any>).map(DomainPublisherConversationFromJSON)),
        'page': json['page'] == null ? undefined : json['page'],
        'pageSize': json['page_size'] == null ? undefined : json['page_size'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function DomainConversationListResponseToJSON(json: any): DomainConversationListResponse {
    return DomainConversationListResponseToJSONTyped(json, false);
}

export function DomainConversationListResponseToJSONTyped(value?: DomainConversationListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conversations': value['conversations'] == null ? undefined : ((value['conversations'] as Array<any>).map(DomainPublisherConversationToJSON)),
        'page': value['page'],
        'page_size': value['pageSize'],
        'total': value['total'],
    };
}

