/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainDelegationStatus } from './DomainDelegationStatus';
import {
    DomainDelegationStatusFromJSON,
    DomainDelegationStatusFromJSONTyped,
    DomainDelegationStatusToJSON,
    DomainDelegationStatusToJSONTyped,
} from './DomainDelegationStatus';

/**
 * 
 * @export
 * @interface DomainPermissionCheckResponse
 */
export interface DomainPermissionCheckResponse {
    /**
     * 
     * @type {DomainDelegationStatus}
     * @memberof DomainPermissionCheckResponse
     */
    delegationStatus?: DomainDelegationStatus;
    /**
     * 
     * @type {boolean}
     * @memberof DomainPermissionCheckResponse
     */
    hasPermissions?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DomainPermissionCheckResponse
     */
    isExpired?: boolean;
    /**
     * 
     * @type {{ [key: string]: boolean | undefined; }}
     * @memberof DomainPermissionCheckResponse
     */
    permissionResults?: { [key: string]: boolean | undefined; };
}



/**
 * Check if a given object implements the DomainPermissionCheckResponse interface.
 */
export function instanceOfDomainPermissionCheckResponse(value: object): value is DomainPermissionCheckResponse {
    return true;
}

export function DomainPermissionCheckResponseFromJSON(json: any): DomainPermissionCheckResponse {
    return DomainPermissionCheckResponseFromJSONTyped(json, false);
}

export function DomainPermissionCheckResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainPermissionCheckResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'delegationStatus': json['delegation_status'] == null ? undefined : DomainDelegationStatusFromJSON(json['delegation_status']),
        'hasPermissions': json['has_permissions'] == null ? undefined : json['has_permissions'],
        'isExpired': json['is_expired'] == null ? undefined : json['is_expired'],
        'permissionResults': json['permission_results'] == null ? undefined : json['permission_results'],
    };
}

export function DomainPermissionCheckResponseToJSON(json: any): DomainPermissionCheckResponse {
    return DomainPermissionCheckResponseToJSONTyped(json, false);
}

export function DomainPermissionCheckResponseToJSONTyped(value?: DomainPermissionCheckResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'delegation_status': DomainDelegationStatusToJSON(value['delegationStatus']),
        'has_permissions': value['hasPermissions'],
        'is_expired': value['isExpired'],
        'permission_results': value['permissionResults'],
    };
}

