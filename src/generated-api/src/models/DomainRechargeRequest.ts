/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainRechargeRequest
 */
export interface DomainRechargeRequest {
    /**
     * 
     * @type {number}
     * @memberof DomainRechargeRequest
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof DomainRechargeRequest
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainRechargeRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainRechargeRequest
     */
    paymentMethodId?: string;
}

/**
 * Check if a given object implements the DomainRechargeRequest interface.
 */
export function instanceOfDomainRechargeRequest(value: object): value is DomainRechargeRequest {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    return true;
}

export function DomainRechargeRequestFromJSON(json: any): DomainRechargeRequest {
    return DomainRechargeRequestFromJSONTyped(json, false);
}

export function DomainRechargeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainRechargeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'description': json['description'] == null ? undefined : json['description'],
        'paymentMethodId': json['payment_method_id'] == null ? undefined : json['payment_method_id'],
    };
}

export function DomainRechargeRequestToJSON(json: any): DomainRechargeRequest {
    return DomainRechargeRequestToJSONTyped(json, false);
}

export function DomainRechargeRequestToJSONTyped(value?: DomainRechargeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'currency': value['currency'],
        'description': value['description'],
        'payment_method_id': value['paymentMethodId'],
    };
}

