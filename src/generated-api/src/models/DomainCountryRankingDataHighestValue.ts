/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainCountryRankingDataHighestValue
 */
export interface DomainCountryRankingDataHighestValue {
    /**
     * 
     * @type {string}
     * @memberof DomainCountryRankingDataHighestValue
     */
    countryCode?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainCountryRankingDataHighestValue
     */
    score?: number;
}

/**
 * Check if a given object implements the DomainCountryRankingDataHighestValue interface.
 */
export function instanceOfDomainCountryRankingDataHighestValue(value: object): value is DomainCountryRankingDataHighestValue {
    return true;
}

export function DomainCountryRankingDataHighestValueFromJSON(json: any): DomainCountryRankingDataHighestValue {
    return DomainCountryRankingDataHighestValueFromJSONTyped(json, false);
}

export function DomainCountryRankingDataHighestValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainCountryRankingDataHighestValue {
    if (json == null) {
        return json;
    }
    return {
        
        'countryCode': json['countryCode'] == null ? undefined : json['countryCode'],
        'score': json['score'] == null ? undefined : json['score'],
    };
}

export function DomainCountryRankingDataHighestValueToJSON(json: any): DomainCountryRankingDataHighestValue {
    return DomainCountryRankingDataHighestValueToJSONTyped(json, false);
}

export function DomainCountryRankingDataHighestValueToJSONTyped(value?: DomainCountryRankingDataHighestValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'countryCode': value['countryCode'],
        'score': value['score'],
    };
}

