/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainPaymentMethodStatus } from './DomainPaymentMethodStatus';
import {
    DomainPaymentMethodStatusFromJSON,
    DomainPaymentMethodStatusFromJSONTyped,
    DomainPaymentMethodStatusToJSON,
    DomainPaymentMethodStatusToJSONTyped,
} from './DomainPaymentMethodStatus';

/**
 * 
 * @export
 * @interface DomainStripePaymentMethod
 */
export interface DomainStripePaymentMethod {
    /**
     * 
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    accountHolderType?: string;
    /**
     * Bank Account Details
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    bankName?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainStripePaymentMethod
     */
    billingAccountId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    brand?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    createdAt?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainStripePaymentMethod
     */
    expMonth?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainStripePaymentMethod
     */
    expYear?: number;
    /**
     * Status and Configuration
     * @type {boolean}
     * @memberof DomainStripePaymentMethod
     */
    isDefault?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    last4?: string;
    /**
     * 
     * @type {{ [key: string]: any | undefined; }}
     * @memberof DomainStripePaymentMethod
     */
    metadata?: { [key: string]: any | undefined; };
    /**
     * Metadata
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    nickname?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainStripePaymentMethod
     */
    organizationId?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainStripePaymentMethod
     */
    paymentMethodId?: number;
    /**
     * 
     * @type {DomainPaymentMethodStatus}
     * @memberof DomainStripePaymentMethod
     */
    status?: DomainPaymentMethodStatus;
    /**
     * Stripe Integration
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    stripePaymentMethodId?: string;
    /**
     * Payment Method Details
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainStripePaymentMethod
     */
    updatedAt?: string;
}



/**
 * Check if a given object implements the DomainStripePaymentMethod interface.
 */
export function instanceOfDomainStripePaymentMethod(value: object): value is DomainStripePaymentMethod {
    return true;
}

export function DomainStripePaymentMethodFromJSON(json: any): DomainStripePaymentMethod {
    return DomainStripePaymentMethodFromJSONTyped(json, false);
}

export function DomainStripePaymentMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainStripePaymentMethod {
    if (json == null) {
        return json;
    }
    return {
        
        'accountHolderType': json['account_holder_type'] == null ? undefined : json['account_holder_type'],
        'bankName': json['bank_name'] == null ? undefined : json['bank_name'],
        'billingAccountId': json['billing_account_id'] == null ? undefined : json['billing_account_id'],
        'brand': json['brand'] == null ? undefined : json['brand'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'expMonth': json['exp_month'] == null ? undefined : json['exp_month'],
        'expYear': json['exp_year'] == null ? undefined : json['exp_year'],
        'isDefault': json['is_default'] == null ? undefined : json['is_default'],
        'last4': json['last4'] == null ? undefined : json['last4'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'organizationId': json['organization_id'] == null ? undefined : json['organization_id'],
        'paymentMethodId': json['payment_method_id'] == null ? undefined : json['payment_method_id'],
        'status': json['status'] == null ? undefined : DomainPaymentMethodStatusFromJSON(json['status']),
        'stripePaymentMethodId': json['stripe_payment_method_id'] == null ? undefined : json['stripe_payment_method_id'],
        'type': json['type'] == null ? undefined : json['type'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function DomainStripePaymentMethodToJSON(json: any): DomainStripePaymentMethod {
    return DomainStripePaymentMethodToJSONTyped(json, false);
}

export function DomainStripePaymentMethodToJSONTyped(value?: DomainStripePaymentMethod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'account_holder_type': value['accountHolderType'],
        'bank_name': value['bankName'],
        'billing_account_id': value['billingAccountId'],
        'brand': value['brand'],
        'created_at': value['createdAt'],
        'exp_month': value['expMonth'],
        'exp_year': value['expYear'],
        'is_default': value['isDefault'],
        'last4': value['last4'],
        'metadata': value['metadata'],
        'nickname': value['nickname'],
        'organization_id': value['organizationId'],
        'payment_method_id': value['paymentMethodId'],
        'status': DomainPaymentMethodStatusToJSON(value['status']),
        'stripe_payment_method_id': value['stripePaymentMethodId'],
        'type': value['type'],
        'updated_at': value['updatedAt'],
    };
}

