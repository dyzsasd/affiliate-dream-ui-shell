/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainActivity } from './DomainActivity';
import {
    DomainActivityFromJSON,
    DomainActivityFromJSONTyped,
    DomainActivityToJSON,
    DomainActivityToJSONTyped,
} from './DomainActivity';
import type { DomainOrganizationType } from './DomainOrganizationType';
import {
    DomainOrganizationTypeFromJSON,
    DomainOrganizationTypeFromJSONTyped,
    DomainOrganizationTypeToJSON,
    DomainOrganizationTypeToJSONTyped,
} from './DomainOrganizationType';

/**
 * 
 * @export
 * @interface DomainDashboardData
 */
export interface DomainDashboardData {
    /**
     * 
     * @type {string}
     * @memberof DomainDashboardData
     */
    lastUpdated?: string;
    /**
     * 
     * @type {DomainOrganizationType}
     * @memberof DomainDashboardData
     */
    organizationType?: DomainOrganizationType;
    /**
     * 
     * @type {Array<DomainActivity>}
     * @memberof DomainDashboardData
     */
    recentActivity?: Array<DomainActivity>;
    /**
     * Type varies by org type
     * @type {object}
     * @memberof DomainDashboardData
     */
    summary?: object;
}



/**
 * Check if a given object implements the DomainDashboardData interface.
 */
export function instanceOfDomainDashboardData(value: object): value is DomainDashboardData {
    return true;
}

export function DomainDashboardDataFromJSON(json: any): DomainDashboardData {
    return DomainDashboardDataFromJSONTyped(json, false);
}

export function DomainDashboardDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainDashboardData {
    if (json == null) {
        return json;
    }
    return {
        
        'lastUpdated': json['last_updated'] == null ? undefined : json['last_updated'],
        'organizationType': json['organization_type'] == null ? undefined : DomainOrganizationTypeFromJSON(json['organization_type']),
        'recentActivity': json['recent_activity'] == null ? undefined : ((json['recent_activity'] as Array<any>).map(DomainActivityFromJSON)),
        'summary': json['summary'] == null ? undefined : json['summary'],
    };
}

export function DomainDashboardDataToJSON(json: any): DomainDashboardData {
    return DomainDashboardDataToJSONTyped(json, false);
}

export function DomainDashboardDataToJSONTyped(value?: DomainDashboardData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'last_updated': value['lastUpdated'],
        'organization_type': DomainOrganizationTypeToJSON(value['organizationType']),
        'recent_activity': value['recentActivity'] == null ? undefined : ((value['recentActivity'] as Array<any>).map(DomainActivityToJSON)),
        'summary': value['summary'],
    };
}

