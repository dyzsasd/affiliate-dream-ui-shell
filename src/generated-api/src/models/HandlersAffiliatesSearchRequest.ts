/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HandlersAffiliatesSearchRequest
 */
export interface HandlersAffiliatesSearchRequest {
    /**
     * Country code to filter by (optional)
     * @type {string}
     * @memberof HandlersAffiliatesSearchRequest
     */
    country?: string;
    /**
     * Page size (number of results per page)
     * @type {number}
     * @memberof HandlersAffiliatesSearchRequest
     */
    offset?: number;
    /**
     * Page number for pagination
     * @type {number}
     * @memberof HandlersAffiliatesSearchRequest
     */
    page?: number;
    /**
     * Partner domains to search for (optional)
     * @type {Array<string>}
     * @memberof HandlersAffiliatesSearchRequest
     */
    partnerDomains?: Array<string>;
    /**
     * Verticals to filter by (optional) - matches verticalsV2 names
     * @type {Array<string>}
     * @memberof HandlersAffiliatesSearchRequest
     */
    verticals?: Array<string>;
}

/**
 * Check if a given object implements the HandlersAffiliatesSearchRequest interface.
 */
export function instanceOfHandlersAffiliatesSearchRequest(value: object): value is HandlersAffiliatesSearchRequest {
    return true;
}

export function HandlersAffiliatesSearchRequestFromJSON(json: any): HandlersAffiliatesSearchRequest {
    return HandlersAffiliatesSearchRequestFromJSONTyped(json, false);
}

export function HandlersAffiliatesSearchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): HandlersAffiliatesSearchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'country': json['country'] == null ? undefined : json['country'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'page': json['page'] == null ? undefined : json['page'],
        'partnerDomains': json['partner_domains'] == null ? undefined : json['partner_domains'],
        'verticals': json['verticals'] == null ? undefined : json['verticals'],
    };
}

export function HandlersAffiliatesSearchRequestToJSON(json: any): HandlersAffiliatesSearchRequest {
    return HandlersAffiliatesSearchRequestToJSONTyped(json, false);
}

export function HandlersAffiliatesSearchRequestToJSONTyped(value?: HandlersAffiliatesSearchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'country': value['country'],
        'offset': value['offset'],
        'page': value['page'],
        'partner_domains': value['partnerDomains'],
        'verticals': value['verticals'],
    };
}

