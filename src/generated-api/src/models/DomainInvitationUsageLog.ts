/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainInvitationUsageLog
 */
export interface DomainInvitationUsageLog {
    /**
     * 
     * @type {number}
     * @memberof DomainInvitationUsageLog
     */
    affiliateOrgId?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainInvitationUsageLog
     */
    associationId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainInvitationUsageLog
     */
    errorMessage?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainInvitationUsageLog
     */
    invitationId?: number;
    /**
     * Usage metadata
     * @type {string}
     * @memberof DomainInvitationUsageLog
     */
    ipAddress?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DomainInvitationUsageLog
     */
    success?: boolean;
    /**
     * 
     * @type {number}
     * @memberof DomainInvitationUsageLog
     */
    usageId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainInvitationUsageLog
     */
    usedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainInvitationUsageLog
     */
    usedByUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainInvitationUsageLog
     */
    userAgent?: string;
}

/**
 * Check if a given object implements the DomainInvitationUsageLog interface.
 */
export function instanceOfDomainInvitationUsageLog(value: object): value is DomainInvitationUsageLog {
    return true;
}

export function DomainInvitationUsageLogFromJSON(json: any): DomainInvitationUsageLog {
    return DomainInvitationUsageLogFromJSONTyped(json, false);
}

export function DomainInvitationUsageLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainInvitationUsageLog {
    if (json == null) {
        return json;
    }
    return {
        
        'affiliateOrgId': json['affiliate_org_id'] == null ? undefined : json['affiliate_org_id'],
        'associationId': json['association_id'] == null ? undefined : json['association_id'],
        'errorMessage': json['error_message'] == null ? undefined : json['error_message'],
        'invitationId': json['invitation_id'] == null ? undefined : json['invitation_id'],
        'ipAddress': json['ip_address'] == null ? undefined : json['ip_address'],
        'success': json['success'] == null ? undefined : json['success'],
        'usageId': json['usage_id'] == null ? undefined : json['usage_id'],
        'usedAt': json['used_at'] == null ? undefined : json['used_at'],
        'usedByUserId': json['used_by_user_id'] == null ? undefined : json['used_by_user_id'],
        'userAgent': json['user_agent'] == null ? undefined : json['user_agent'],
    };
}

export function DomainInvitationUsageLogToJSON(json: any): DomainInvitationUsageLog {
    return DomainInvitationUsageLogToJSONTyped(json, false);
}

export function DomainInvitationUsageLogToJSONTyped(value?: DomainInvitationUsageLog | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'affiliate_org_id': value['affiliateOrgId'],
        'association_id': value['associationId'],
        'error_message': value['errorMessage'],
        'invitation_id': value['invitationId'],
        'ip_address': value['ipAddress'],
        'success': value['success'],
        'usage_id': value['usageId'],
        'used_at': value['usedAt'],
        'used_by_user_id': value['usedByUserId'],
        'user_agent': value['userAgent'],
    };
}

