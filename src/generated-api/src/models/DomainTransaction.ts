/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainTransactionType } from './DomainTransactionType';
import {
    DomainTransactionTypeFromJSON,
    DomainTransactionTypeFromJSONTyped,
    DomainTransactionTypeToJSON,
    DomainTransactionTypeToJSONTyped,
} from './DomainTransactionType';
import type { DomainTransactionStatus } from './DomainTransactionStatus';
import {
    DomainTransactionStatusFromJSON,
    DomainTransactionStatusFromJSONTyped,
    DomainTransactionStatusToJSON,
    DomainTransactionStatusToJSONTyped,
} from './DomainTransactionStatus';

/**
 * 
 * @export
 * @interface DomainTransaction
 */
export interface DomainTransaction {
    /**
     * 
     * @type {number}
     * @memberof DomainTransaction
     */
    amount?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainTransaction
     */
    balanceAfter?: number;
    /**
     * Balance Tracking
     * @type {number}
     * @memberof DomainTransaction
     */
    balanceBefore?: number;
    /**
     * 
     * @type {number}
     * @memberof DomainTransaction
     */
    billingAccountId?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainTransaction
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainTransaction
     */
    currency?: string;
    /**
     * Metadata
     * @type {string}
     * @memberof DomainTransaction
     */
    description?: string;
    /**
     * 
     * @type {{ [key: string]: any | undefined; }}
     * @memberof DomainTransaction
     */
    metadata?: { [key: string]: any | undefined; };
    /**
     * 
     * @type {number}
     * @memberof DomainTransaction
     */
    organizationId?: number;
    /**
     * Timestamps
     * @type {string}
     * @memberof DomainTransaction
     */
    processedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainTransaction
     */
    referenceId?: string;
    /**
     * References
     * @type {string}
     * @memberof DomainTransaction
     */
    referenceType?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainTransaction
     */
    relatedTransactionId?: number;
    /**
     * Status
     * @type {DomainTransactionStatus}
     * @memberof DomainTransaction
     */
    status?: DomainTransactionStatus;
    /**
     * 
     * @type {string}
     * @memberof DomainTransaction
     */
    stripeChargeId?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainTransaction
     */
    stripeInvoiceId?: string;
    /**
     * Stripe Integration
     * @type {string}
     * @memberof DomainTransaction
     */
    stripePaymentIntentId?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainTransaction
     */
    transactionId?: number;
    /**
     * Transaction Details
     * @type {DomainTransactionType}
     * @memberof DomainTransaction
     */
    type?: DomainTransactionType;
    /**
     * 
     * @type {string}
     * @memberof DomainTransaction
     */
    updatedAt?: string;
}



/**
 * Check if a given object implements the DomainTransaction interface.
 */
export function instanceOfDomainTransaction(value: object): value is DomainTransaction {
    return true;
}

export function DomainTransactionFromJSON(json: any): DomainTransaction {
    return DomainTransactionFromJSONTyped(json, false);
}

export function DomainTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'] == null ? undefined : json['amount'],
        'balanceAfter': json['balance_after'] == null ? undefined : json['balance_after'],
        'balanceBefore': json['balance_before'] == null ? undefined : json['balance_before'],
        'billingAccountId': json['billing_account_id'] == null ? undefined : json['billing_account_id'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'description': json['description'] == null ? undefined : json['description'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'organizationId': json['organization_id'] == null ? undefined : json['organization_id'],
        'processedAt': json['processed_at'] == null ? undefined : json['processed_at'],
        'referenceId': json['reference_id'] == null ? undefined : json['reference_id'],
        'referenceType': json['reference_type'] == null ? undefined : json['reference_type'],
        'relatedTransactionId': json['related_transaction_id'] == null ? undefined : json['related_transaction_id'],
        'status': json['status'] == null ? undefined : DomainTransactionStatusFromJSON(json['status']),
        'stripeChargeId': json['stripe_charge_id'] == null ? undefined : json['stripe_charge_id'],
        'stripeInvoiceId': json['stripe_invoice_id'] == null ? undefined : json['stripe_invoice_id'],
        'stripePaymentIntentId': json['stripe_payment_intent_id'] == null ? undefined : json['stripe_payment_intent_id'],
        'transactionId': json['transaction_id'] == null ? undefined : json['transaction_id'],
        'type': json['type'] == null ? undefined : DomainTransactionTypeFromJSON(json['type']),
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function DomainTransactionToJSON(json: any): DomainTransaction {
    return DomainTransactionToJSONTyped(json, false);
}

export function DomainTransactionToJSONTyped(value?: DomainTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'balance_after': value['balanceAfter'],
        'balance_before': value['balanceBefore'],
        'billing_account_id': value['billingAccountId'],
        'created_at': value['createdAt'],
        'currency': value['currency'],
        'description': value['description'],
        'metadata': value['metadata'],
        'organization_id': value['organizationId'],
        'processed_at': value['processedAt'],
        'reference_id': value['referenceId'],
        'reference_type': value['referenceType'],
        'related_transaction_id': value['relatedTransactionId'],
        'status': DomainTransactionStatusToJSON(value['status']),
        'stripe_charge_id': value['stripeChargeId'],
        'stripe_invoice_id': value['stripeInvoiceId'],
        'stripe_payment_intent_id': value['stripePaymentIntentId'],
        'transaction_id': value['transactionId'],
        'type': DomainTransactionTypeToJSON(value['type']),
        'updated_at': value['updatedAt'],
    };
}

