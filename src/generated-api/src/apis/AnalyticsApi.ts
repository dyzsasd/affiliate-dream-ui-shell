/* tslint:disable */
/* eslint-disable */
/**
 * Affiliate Backend API
 * API Server for Affiliate Backend Application
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiV1AnalyticsAdvertisersIdGet200Response,
  ApiV1AnalyticsAdvertisersPost201Response,
  ApiV1AnalyticsAffiliatesIdGet200Response,
  ApiV1AnalyticsAffiliatesPost201Response,
  ApiV1AnalyticsAutocompleteGet200Response,
  HandlersCreateAdvertiserRequest,
  HandlersCreatePublisherRequest,
  HandlersErrorResponse,
} from '../models/index';
import {
    ApiV1AnalyticsAdvertisersIdGet200ResponseFromJSON,
    ApiV1AnalyticsAdvertisersIdGet200ResponseToJSON,
    ApiV1AnalyticsAdvertisersPost201ResponseFromJSON,
    ApiV1AnalyticsAdvertisersPost201ResponseToJSON,
    ApiV1AnalyticsAffiliatesIdGet200ResponseFromJSON,
    ApiV1AnalyticsAffiliatesIdGet200ResponseToJSON,
    ApiV1AnalyticsAffiliatesPost201ResponseFromJSON,
    ApiV1AnalyticsAffiliatesPost201ResponseToJSON,
    ApiV1AnalyticsAutocompleteGet200ResponseFromJSON,
    ApiV1AnalyticsAutocompleteGet200ResponseToJSON,
    HandlersCreateAdvertiserRequestFromJSON,
    HandlersCreateAdvertiserRequestToJSON,
    HandlersCreatePublisherRequestFromJSON,
    HandlersCreatePublisherRequestToJSON,
    HandlersErrorResponseFromJSON,
    HandlersErrorResponseToJSON,
} from '../models/index';

export interface ApiV1AnalyticsAdvertisersIdGetRequest {
    id: number;
}

export interface ApiV1AnalyticsAdvertisersPostRequest {
    advertiser: HandlersCreateAdvertiserRequest;
}

export interface ApiV1AnalyticsAffiliatesDomainDomainGetRequest {
    domain: string;
}

export interface ApiV1AnalyticsAffiliatesIdGetRequest {
    id: number;
}

export interface ApiV1AnalyticsAffiliatesPostRequest {
    publisher: HandlersCreatePublisherRequest;
}

export interface ApiV1AnalyticsAutocompleteGetRequest {
    q: string;
    type?: ApiV1AnalyticsAutocompleteGetTypeEnum;
    limit?: number;
}

/**
 * 
 */
export class AnalyticsApi extends runtime.BaseAPI {

    /**
     * Retrieve detailed analytics data for a specific advertiser
     * Get advertiser analytics data
     */
    async apiV1AnalyticsAdvertisersIdGetRaw(requestParameters: ApiV1AnalyticsAdvertisersIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1AnalyticsAdvertisersIdGet200Response>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiV1AnalyticsAdvertisersIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/analytics/advertisers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1AnalyticsAdvertisersIdGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve detailed analytics data for a specific advertiser
     * Get advertiser analytics data
     */
    async apiV1AnalyticsAdvertisersIdGet(requestParameters: ApiV1AnalyticsAdvertisersIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1AnalyticsAdvertisersIdGet200Response> {
        const response = await this.apiV1AnalyticsAdvertisersIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create a new advertiser analytics entry
     * Create advertiser analytics data
     */
    async apiV1AnalyticsAdvertisersPostRaw(requestParameters: ApiV1AnalyticsAdvertisersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1AnalyticsAdvertisersPost201Response>> {
        if (requestParameters['advertiser'] == null) {
            throw new runtime.RequiredError(
                'advertiser',
                'Required parameter "advertiser" was null or undefined when calling apiV1AnalyticsAdvertisersPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/analytics/advertisers`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HandlersCreateAdvertiserRequestToJSON(requestParameters['advertiser']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1AnalyticsAdvertisersPost201ResponseFromJSON(jsonValue));
    }

    /**
     * Create a new advertiser analytics entry
     * Create advertiser analytics data
     */
    async apiV1AnalyticsAdvertisersPost(requestParameters: ApiV1AnalyticsAdvertisersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1AnalyticsAdvertisersPost201Response> {
        const response = await this.apiV1AnalyticsAdvertisersPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieve detailed analytics data for a specific publisher (affiliate) by domain name
     * Get publisher analytics data by domain
     */
    async apiV1AnalyticsAffiliatesDomainDomainGetRaw(requestParameters: ApiV1AnalyticsAffiliatesDomainDomainGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1AnalyticsAffiliatesIdGet200Response>> {
        if (requestParameters['domain'] == null) {
            throw new runtime.RequiredError(
                'domain',
                'Required parameter "domain" was null or undefined when calling apiV1AnalyticsAffiliatesDomainDomainGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/analytics/affiliates/domain/{domain}`.replace(`{${"domain"}}`, encodeURIComponent(String(requestParameters['domain']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1AnalyticsAffiliatesIdGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve detailed analytics data for a specific publisher (affiliate) by domain name
     * Get publisher analytics data by domain
     */
    async apiV1AnalyticsAffiliatesDomainDomainGet(requestParameters: ApiV1AnalyticsAffiliatesDomainDomainGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1AnalyticsAffiliatesIdGet200Response> {
        const response = await this.apiV1AnalyticsAffiliatesDomainDomainGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieve detailed analytics data for a specific publisher (affiliate)
     * Get publisher analytics data
     */
    async apiV1AnalyticsAffiliatesIdGetRaw(requestParameters: ApiV1AnalyticsAffiliatesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1AnalyticsAffiliatesIdGet200Response>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiV1AnalyticsAffiliatesIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/analytics/affiliates/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1AnalyticsAffiliatesIdGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve detailed analytics data for a specific publisher (affiliate)
     * Get publisher analytics data
     */
    async apiV1AnalyticsAffiliatesIdGet(requestParameters: ApiV1AnalyticsAffiliatesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1AnalyticsAffiliatesIdGet200Response> {
        const response = await this.apiV1AnalyticsAffiliatesIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create a new publisher analytics entry
     * Create publisher analytics data
     */
    async apiV1AnalyticsAffiliatesPostRaw(requestParameters: ApiV1AnalyticsAffiliatesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1AnalyticsAffiliatesPost201Response>> {
        if (requestParameters['publisher'] == null) {
            throw new runtime.RequiredError(
                'publisher',
                'Required parameter "publisher" was null or undefined when calling apiV1AnalyticsAffiliatesPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/analytics/affiliates`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HandlersCreatePublisherRequestToJSON(requestParameters['publisher']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1AnalyticsAffiliatesPost201ResponseFromJSON(jsonValue));
    }

    /**
     * Create a new publisher analytics entry
     * Create publisher analytics data
     */
    async apiV1AnalyticsAffiliatesPost(requestParameters: ApiV1AnalyticsAffiliatesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1AnalyticsAffiliatesPost201Response> {
        const response = await this.apiV1AnalyticsAffiliatesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Search advertisers and/or publishers by domain name for autocompletion (minimum 3 characters)
     * Search organizations for autocompletion
     */
    async apiV1AnalyticsAutocompleteGetRaw(requestParameters: ApiV1AnalyticsAutocompleteGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1AnalyticsAutocompleteGet200Response>> {
        if (requestParameters['q'] == null) {
            throw new runtime.RequiredError(
                'q',
                'Required parameter "q" was null or undefined when calling apiV1AnalyticsAutocompleteGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['q'] != null) {
            queryParameters['q'] = requestParameters['q'];
        }

        if (requestParameters['type'] != null) {
            queryParameters['type'] = requestParameters['type'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/analytics/autocomplete`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1AnalyticsAutocompleteGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Search advertisers and/or publishers by domain name for autocompletion (minimum 3 characters)
     * Search organizations for autocompletion
     */
    async apiV1AnalyticsAutocompleteGet(requestParameters: ApiV1AnalyticsAutocompleteGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1AnalyticsAutocompleteGet200Response> {
        const response = await this.apiV1AnalyticsAutocompleteGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ApiV1AnalyticsAutocompleteGetTypeEnum = {
    Advertiser: 'advertiser',
    Publisher: 'publisher',
    Both: 'both'
} as const;
export type ApiV1AnalyticsAutocompleteGetTypeEnum = typeof ApiV1AnalyticsAutocompleteGetTypeEnum[keyof typeof ApiV1AnalyticsAutocompleteGetTypeEnum];
